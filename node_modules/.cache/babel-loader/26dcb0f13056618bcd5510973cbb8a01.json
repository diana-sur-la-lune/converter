{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Documents\\\\bitcoin-converter\\\\src\\\\Converter.js\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { AllHtmlEntities } from 'html-entities';\nimport NumberFormat from 'react-number-format';\n\nconst decimalSeparator = require('react-number-format');\n\nconst entities = new AllHtmlEntities();\nconst INTERVAL = 1000 * 60;\nconst URL = 'https://api.coindesk.com/v1/bpi/currentprice.json';\n\nclass Converter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      btc: '',\n      refreshDate: '',\n      currencies: [],\n      userCurrencies: [],\n      newCurrencyIndex: 0\n    };\n\n    this.getAvailableCurrencies = (currencies, userCurrencies) => {\n      const userCurenciesCodes = userCurrencies.map(item => item.code);\n      const availableCurrencies = currencies.filter(item => !userCurenciesCodes.includes(item.code));\n      return availableCurrencies;\n    };\n\n    this.refresh = () => {\n      fetch(URL).then(async response => {\n        const json = await response.json();\n        const currencies = Object.keys(json.bpi).map(key => json.bpi[key]);\n        const {\n          userCurrencies\n        } = this.state;\n        const availableCurrencies = this.getAvailableCurrencies(currencies, userCurrencies);\n        this.setState({\n          refreshDate: json.time.updatedISO,\n          currencies,\n          newCurrencyIndex: 0\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n    setInterval(this.refresh, INTERVAL);\n  }\n\n  render() {\n    const {\n      btc,\n      refreshDate,\n      currencies,\n      userCurrencies,\n      newCurrencyIndex\n    } = this.state;\n    const availableCurrencies = this.getAvailableCurrencies(currencies, userCurrencies);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center text-center pt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Bitcoin Converter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card card-body mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header mb-3\",\n              children: `Last refresh: ${moment(refreshDate).format('YYYY-MM-DD HH:mm:ss')}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group-prepend\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"input-group-text\",\n                    id: \"basic-addon1\",\n                    children: \"BTC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  placeholder: \"Add amount of Bitcoins\",\n                  onChange: event => {\n                    const {\n                      value\n                    } = event.target;\n                    this.setState({\n                      btc: value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), userCurrencies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: userCurrencies.map(item => {\n                const btcValue = Number.parseFloat(btc) || 0;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group-text my-2\",\n                      children: [`${item.code}`, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 25\n                    }, this)\n                  }, `${item.code}-favorite`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-8\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group-text my-2\",\n                      children: `${entities.decode(item.symbol)}${decimalSeparator(btcValue * item.rate_float)}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-1\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-dark my-2\",\n                      onClick: () => {\n                        const newUserCurerncies = userCurrencies.filter(userCurrency => item.code !== userCurrency.code);\n                        this.setState({\n                          userCurrencies: newUserCurerncies\n                        });\n                      },\n                      children: \"X\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), userCurrencies.length > 0, availableCurrencies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: newCurrencyIndex,\n                placeholder: \"ddd\",\n                className: \"form-control\",\n                onChange: event => {\n                  const {\n                    value\n                  } = event.target;\n                  this.setState({\n                    newCurrencyIndex: value\n                  });\n                },\n                children: availableCurrencies.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: index,\n                  children: item.code\n                }, `${item.code}-option`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn btn-primary\",\n                onClick: () => {\n                  const newCurrency = availableCurrencies[newCurrencyIndex];\n                  this.setState({\n                    userCurrencies: [...userCurrencies, newCurrency],\n                    newCurrencyIndex: 0\n                  });\n                },\n                children: \"Add currency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["C:/Users/Diana/Documents/bitcoin-converter/src/Converter.js"],"names":["React","Component","moment","AllHtmlEntities","NumberFormat","decimalSeparator","require","entities","INTERVAL","URL","Converter","state","btc","refreshDate","currencies","userCurrencies","newCurrencyIndex","getAvailableCurrencies","userCurenciesCodes","map","item","code","availableCurrencies","filter","includes","refresh","fetch","then","response","json","Object","keys","bpi","key","setState","time","updatedISO","componentDidMount","setInterval","render","format","event","value","target","length","btcValue","Number","parseFloat","decode","symbol","rate_float","newUserCurerncies","userCurrency","index","newCurrency"],"mappings":"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","sourcesContent":["import '../node_modules/bootstrap/dist/css/bootstrap.css';\r\nimport React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { AllHtmlEntities } from 'html-entities';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst decimalSeparator = require('react-number-format');\r\nconst entities = new AllHtmlEntities();\r\nconst INTERVAL = 1000 * 60;\r\nconst URL = 'https://api.coindesk.com/v1/bpi/currentprice.json';\r\n\r\nclass Converter extends Component {\r\n  state = {\r\n    btc: '',\r\n    refreshDate: '',\r\n    currencies: [],\r\n    userCurrencies: [],\r\n    newCurrencyIndex: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    this.refresh();\r\n    setInterval(this.refresh, INTERVAL);\r\n  }\r\n\r\n  getAvailableCurrencies = (currencies, userCurrencies) => {\r\n    const userCurenciesCodes = userCurrencies.map(item => item.code);\r\n    const availableCurrencies = currencies.filter(item => !userCurenciesCodes.includes(item.code));\r\n    return availableCurrencies;\r\n  };\r\n\r\n  refresh = () => {\r\n    fetch(URL).then(async response => {\r\n      const json = await response.json();\r\n      const currencies = Object.keys(json.bpi).map(key => json.bpi[key]);\r\n      const { userCurrencies } = this.state;\r\n      const availableCurrencies = this.getAvailableCurrencies(currencies, userCurrencies);\r\n      this.setState({\r\n        refreshDate: json.time.updatedISO,\r\n        currencies,\r\n        newCurrencyIndex: 0,\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { btc, refreshDate, currencies, userCurrencies, newCurrencyIndex } = this.state;\r\n\r\n    const availableCurrencies = this.getAvailableCurrencies(currencies, userCurrencies);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center text-center pt-5\">\r\n          <div className=\"col-6\">\r\n            <h1>Bitcoin Converter</h1>\r\n            <div className=\"card card-body mt-2\" >\r\n              <div className=\"card-header mb-3\">{`Last refresh: ${moment(refreshDate).format('YYYY-MM-DD HH:mm:ss')}`}</div>\r\n\r\n\r\n              <div>\r\n                <div className=\"input-group mb-3\">\r\n                  <div className=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">BTC</span>\r\n                  </div>\r\n                  <input\r\n                    className=\"form-control\" placeholder=\"Add amount of Bitcoins\"\r\n                    onChange={event => {\r\n                      const { value } = event.target;\r\n                      this.setState({ btc: value });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {userCurrencies.length > 0 && (\r\n                <div>\r\n                  {userCurrencies.map(item => {\r\n                    const btcValue = Number.parseFloat(btc) || 0;\r\n                    return (\r\n                      <div className=\"row\">\r\n                        <div className=\"col-2\"\r\n                      key={`${item.code}-favorite`}>\r\n                        \r\n                        <div className=\"input-group-text my-2\">\r\n                        {`${item.code}`} </div> \r\n                        </div>\r\n\r\n                        <div className=\"col-8\">\r\n                        <div className=\"input-group-text my-2\">\r\n                        {`${entities.decode(item.symbol)}${decimalSeparator(btcValue * item.rate_float)}`} \r\n                        </div>\r\n                        </div>\r\n\r\n                      \r\n                      \r\n                      <div className=\"col-1\">\r\n                      <button type=\"button\" class=\"btn btn-dark my-2\"\r\n                          onClick={() => {\r\n                            const newUserCurerncies = userCurrencies.filter(\r\n                              userCurrency => item.code !== userCurrency.code,\r\n                            );\r\n                            this.setState({ userCurrencies: newUserCurerncies });\r\n                          }}>\r\n                          X\r\n                        </button>\r\n</div>\r\n</div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n              {userCurrencies.length > 0 }\r\n\r\n              {availableCurrencies.length > 0 && (\r\n\r\n                <div className=\"input-group mt-4\">\r\n                  <select\r\n                    value={newCurrencyIndex}\r\n                    placeholder=\"ddd\"\r\n                    className=\"form-control\"\r\n                    onChange={event => {\r\n                      const { value } = event.target;\r\n                      this.setState({ newCurrencyIndex: value });\r\n                    }}>\r\n                    {availableCurrencies.map((item, index) => (\r\n                      <option key={`${item.code}-option`} value={index}>\r\n                        {item.code}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <div className=\"btn btn-primary\"\r\n                    onClick={() => {\r\n                      const newCurrency = availableCurrencies[newCurrencyIndex];\r\n                      \r\n                      this.setState({\r\n                        userCurrencies: [...userCurrencies, newCurrency],\r\n                        newCurrencyIndex: 0,\r\n                      });\r\n                    }}>\r\n                    Add currency\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}